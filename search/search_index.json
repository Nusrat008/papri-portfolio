{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-my-portfolio-i-am-nusrat-jahan-papri-a-final-year-student-of-eee-cuet-bangladesh","title":"Welcome to my portfolio. I am Nusrat Jahan Papri, a final year student of EEE, CUET, Bangladesh.","text":"Education  <p>Currently, I am pursuing my Bachelor of Science in Electrical and Electronic Engineering (EEE) at Chittagong University of Engineering and Technology (CUET).</p> <p>\ud83d\udd17See details here</p>  Career Objective   <p>I aspire to achieve impactful research outcomes through unwavering dedication.I seek hands-on experience in EEE design, assembly, and service to solidify my understanding of practical applications and bridge the gap between theory and real-world implementation.</p> Area of Research Interest   <ul> <li>Optics &amp; Photonics</li> <li>Biomedical Instrumentation</li> <li>Artificial intelligence, Machine Learning, Deep learning</li> <li>Embedded System: System Design with Arduino, ESP &amp; Sensors</li> <li>IOT</li> <li>Quantum Computing</li> </ul>  Technical Skills   <p>\u2699\ufe0f Software and Programming Skills:</p> <p>\ud83d\udd39 Programming Language(See Details): C, C++, MATLAB, Assembly (MASM), ARDUINO, Python </p> <p>\ud83d\udd39 Electrical Circuit Simulation(See Details): Proteus, Advance Design System (ADS), MATLAB Simulink</p> <p>\ud83d\udd39 Numerical Analysis(See Details): MATLAB, Origin</p> <p>\ud83d\udd39 Microcontroller Programming(See Details): ARDUINO, PIC (mikroC PRO)</p> <p>\ud83d\udd39 Graphics and Document: LATEX, AUTOCAD(CLICK), Camtasia, KineMaster</p> <p>\u2699\ufe0f Hardware Skills: </p> <ul> <li> <p>Knowledge of Circuit Theory and Electronics. </p> </li> <li> <p>Designing Embedded System through Arduino, Atme328P, Esp8266, PIC microcontroller.</p> </li> </ul>  Project Works    <p>\ud83d\udd17IOT based - Low cost Health Monitoring System</p> <p>\ud83d\udd17Ultrasonic Distance Measurement</p> <p>\ud83d\udd17Electronic Mosquito Repellent</p>  Achievements   <ul> <li>\ud83c\udfc6 CHAMPION    Project in the ''Undergraduate Project Video Contest'' at ''Internaltional Student LED-Con 2023''</li> <li>\ud83c\udfc5 Runner Up  in TechSpark 2023</li> <li>\ud83c\udfc5 Runner Up Project in 'Basic Electronic, PCB Designing  &amp; Proteus'</li> </ul> <p>\ud83d\udd17See details here</p>  Course and Certifications   <ul> <li>Course on 'Engineering Maths and their Physics &amp; Applications'</li> <li>Matlab Workshop</li> </ul> <p>\ud83d\udd17See details here</p>"},{"location":"CplusPlus/","title":"Programming Language","text":""},{"location":"CplusPlus/#c-programming","title":"\ud83d\udccc C++ Programming","text":"<p>Throughout my academic journey, I have dedicated myself to mastering C++ programming, diving deep into its foundational principles and exploring its intricate nuances. With unwavering determination, I have tackled essential topics such as functions, string manipulation, and data structures, refining my skills through challenging problem-solving exercises. Competitive programming platforms like Codeforces have been invaluable, providing opportunities for growth and honing my abilities amidst fierce competition.</p> <p>However, my journey has transcended mere practical application. I have fully immersed myself in the realm of object-oriented programming, mastering its complex principles to undertake sophisticated projects. These endeavors not only showcase my proficiency but also highlight my adeptness in utilizing inheritance and encapsulation to create robust and meticulously structured code.</p> <p>Each project has served as a testament to my relentless pursuit of excellence, marking significant milestones in my learning journey. They have strengthened my expertise in wielding C++ with finesse and precision, empowering me to confront both theoretical concepts and practical challenges with confidence and determination.</p> <p>Guidline for C++ Programming: I have been completted the course of ''Udemy'' from beginning to beyond.</p> <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p> <p>\ud83d\udd17CLICk Here for the course</p>"},{"location":"CplusPlus/#c-programming_1","title":"\ud83d\udccc C Programming","text":"<p>Motivated by my passion for engineering, I used the three-month gap before starting university to improve my programming skills. Even though there weren't many resources available in Bangla, I stumbled upon Tamim Shariar Subin's C++ book, which I completted eagerly, building a strong foundation in C programming. Then, I solved 52 challenging problems on Dimik O J by Tamim Shariar Subin, sharpening my problem-solving skills independently.</p> <p>After starting university, I found my self-directed learning in C programming incredibly helpful for navigating the advanced topics in my academic courses. Mastering the basics not only allowed me to excel in introductory courses but also facilitated a deeper understanding of more complex subjects. </p> <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p> <p>52 Programming Problem ''Tamim Shahriar Subeen''</p> <p>\ud83d\udd1752 Problem form Dimik OJ </p> <p>\ud83d\udd17My solution is HERE</p>"},{"location":"Education/","title":"Education","text":""},{"location":"Education/#bachelor-of-science-in-electrical-and-electronic-engineering-2020-present","title":"Bachelor of Science in Electrical and Electronic Engineering: 2020-Present","text":"<p>Chittagong University of Engineering &amp; Technology (CUET), Chittagong-4349, Bangladesh, cuet.ac.bd</p>"},{"location":"Education/#story-behind-to-pursue-eee-at-cuet","title":"\ud83d\udca1 Story behind to Pursue EEE at CUET","text":"<p>Since childhood, I loved learning math and science, enjoying solving math problems. When I was in 9th grade,I came to know the exciting world of Physics and Math in a bit broader range. From that time, I started to dream of being an engineer. Later, in 12th grade, I got introduced to electricity and electronics. I found my passion in solving electronics problems and dreamt of studying EEE.</p> <p>I worked hard to prepare myself to get a chance at the top Engineering Universities in Bangladesh. After completing higher secondary school, I took part in admission tests and got chances at CUET and KUET. I also got a chance at DU and had the opportunity to study engineering there. </p> <p>But I chose an Engineering University over University of Dhaka(DU). I was in confusion about where I should go, CUET or Khulna University of Engineering and Technology(KUET). As both of them are considered top Engineering universities in Bangladesh, and my hometown is near CUET, I decided to go to CUET, EEE after discussing with my family. And my journey through my passionate field starts here at CUET. A long way to go yet.</p>"},{"location":"Education/#higher-secondary-certificate-2017-2019","title":"Higher Secondary Certificate: 2017-2019","text":"<p>Chittagong Govt. Women\u2019s College, Bangladesh, cgwc.edu.bd</p>"},{"location":"Mosquito-repellent-ckt/","title":"Electronic Mosquito Repellent","text":"<p>In recent years, the escalating dengue and chikungunya situation in Bangladesh has emerged as a serious public health problem in terms of morbidity and mortality.Analyzing data of recent survey shows how people are being affected by these diseases.</p> <p>People used several kinds Mosquito repeller such as coil,lotion and chemical based Spray which are not enough effctive and environment firendly and also very costly.</p> <p>We developed a cost effective and environment friendly Mosquito Repellent model capable of emitting ultrasonic energy of varied frequency that repels or eliminates Mosquitos.The emitting ultrasound of output high frequency(20kHz to 38kHz) do affect the auditory senses of mosquitoes.However,our model do not make any harm hearing ability of human.</p> <p>This model can be made by using the components are 555 timer, buzzer, switch , battery, Resistor and capacitor which are available and cheap. </p>"},{"location":"Mosquito-repellent-ckt/#feature","title":"\ud83d\udccc Feature","text":"<p>\ud83d\udd39 High Frequency Repulsion: Operates at an inaudible 44 kHz frequency, effectively repelling mosquitoes without disrupting humans or pets.</p> <p>\ud83d\udd39 Environmentally Friendly:</p> <pre><code>1.Rechargeable Battery\n\n2.Recyclable Battery\n</code></pre> <p>\ud83d\udd39 Cost-Effective</p>"},{"location":"Mosquito-repellent-ckt/#circuit-diagram","title":"\ud83d\udd30 Circuit Diagram","text":"Circuit Diagram"},{"location":"Mosquito-repellent-ckt/#hardware","title":"\ud83d\udd30 Hardware","text":"Breadboard Implementation"},{"location":"Mosquito-repellent-ckt/#pcb-design","title":"\ud83d\udd30 PCB Design","text":"PCB Layout"},{"location":"Mosquito-repellent-ckt/#pcb-implementaion","title":"\ud83d\udd30 PCB Implementaion","text":"PCB Implementation"},{"location":"Mosquito-repellent-ckt/#report","title":"\ud83d\udd30 Report","text":"<p>The report has been made publicly available to to help other students provide a guideline on the basic framework.Please avoid copying entriely or partially from this document. </p> <p>\ud83d\udd17Click here for the Report</p>"},{"location":"Mosquito-repellent-ckt/#credit","title":"\u2b50 Credit","text":"<p>As a part of the academic activities, this project has been completed by:</p> <pre><code>1. Nusrat Jahan Papri\n\n2. Jannatul Maua Nazia\n\n3. Shahida Akther\n</code></pre>"},{"location":"achievements/","title":"Achievements","text":""},{"location":"achievements/#champion-project-in-the-undergraduate-project-video-contest-at-internaltional-student-led-con-2023","title":"\ud83c\udfc6 CHAMPION    Project in the ''Undergraduate Project Video Contest'' at ''Internaltional Student LED-Con 2023''","text":"<p>Organizer: IEEE Bangladesh Section </p> <p>Team name: OXYGENIX</p> <p>Project Details: </p> <p>\ud83d\udd17Click here to See project details</p> <p>This project tackles the challenge of infrequent patient monitoring and delayed responses in healthcare, particularly in regions with limited medical resources. </p> <p>Our solution is a cost-effective IoT-based health monitoring device that transmits real-time vital signs (heart rate, SpO2, and temperature) to doctors, relatives, and authorized personnel via a user-friendly IoT dashboard. certificate</p> <p>Medical Feature:</p> <ol> <li> <p>BPM Measurement</p> </li> <li> <p>SpO2 Measurement</p> </li> <li> <p>Temperature Measurement</p> </li> <li> <p>Patient History</p> </li> <li> <p>No Side Effect </p> </li> </ol> OxyGenix Device Certificate | Champion | International student LED-Con 2023"},{"location":"achievements/#runner-up-in-techspark-2023","title":"\ud83c\udfc5 Runner Up  in TechSpark 2023","text":"<p>Organizer:  IEEE CUET WIE Affinity Group Student Branch</p> TechSpark 2023 Certificate | Runner Up | TechSpark2.0"},{"location":"achievements/#runner-up-project-in-basic-electronic-pcb-designing-proteus","title":"\ud83c\udfc5 Runner Up Project in 'Basic Electronic, PCB Designing  &amp; Proteus'","text":"<p>Organizer:  IEEE CUET STUDENT BRANCH</p> <p>Porject Details:</p> <p>\ud83d\udd17Click here to See project details</p> <p>I developed a cost effective and environment friendly Mosquito Repellent model capable of emitting ultrasonic energy of varied frequency that repels or eliminates Mosquitos.The emitting ultrasound of output high frequency(20kHz to 38kHz) do affect the auditory senses of mosquitoes.However,my model do not make any harm hearing ability of human.</p> Mosquito Repellent IEEE,CUET Certificate | Runner Up | IEEE CUET STUDENT BRANCH"},{"location":"basic-arduino/","title":"Basic Arduino","text":"<p>As an Electrical and Electronic Engineering student, I have always found the world of electronics to be captivating.  I have dedicated myself to cultivating proficiency in both programming and hardware integration,using  Arduino and ESP8266/ESP32 microcontrollers.</p>"},{"location":"basic-arduino/#1-three-led-blinking-using-arduino","title":"1. Three LED Blinking Using Arduino","text":"<p>To achieve the desired sequence, connect three LEDs to pins 5, 8, and 10 of the Arduino board. Then, sequentially turn on each LED, starting with pin 5, followed by pin 8, and finally pin 10, with a delay of 1.5 seconds between each LED activation.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>void setup() {\n\n// put your setup code here, to run once:\npinMode (5, OUTPUT);\npinMode (8,OUTPUT);\npinMode (10, OUTPUT);\n}\nvoid loop() {\n// put your main code here, to run repeatedly:\ndigitalWrite(5, HIGH);\ndigitalWrite(8, LOW);\ndigitalWrite(10, LOW);\ndelay(1500);\n\ndigitalWrite(5, LOW);\ndigitalWrite(8, HIGH);\ndigitalWrite(10, LOW);\ndelay(1500);\n\ndigitalWrite(5, LOW);\ndigitalWrite(8, LOW); \ndigitalWrite(10, HIGH); \ndelay (1500);\n\ndigitalWrite(5, LOW);\ndigitalWrite(8, LOW);\ndigitalWrite(10, LOW);\ndelay(1500);\n}\n</code></pre>"},{"location":"basic-arduino/#2-write-your-name-on-lcd-display-using-arduino","title":"2. Write Your Name on LCD display Using Arduino","text":"<p>Write your name on the first line of the LCD and your department name on the second line. </p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>#include&lt;LiquidCrystal.h&gt;\nLiquidCrystal lcd (12,11,5,4,3,2); void setup() {\nlcd.begin(16,2);\nlcd.print (\"Nusrat Jahan\");\n}\nvoid loop() {\n\nlcd.setCursor (0,1); \nlcd.print (\"Dept. of EEE\");\n}\n</code></pre>"},{"location":"basic-arduino/#3-stopwatch-using-arduino","title":"3. StopWatch using Arduino","text":"<p>Create a clock on the LCD that counts from 0 to 60, restarting after one minute like a stopwatch.</p> <p>Implementation Video: </p> <p>Code:</p> <pre><code>#include&lt;LiquidCrystal.h&gt;\nLiquidCrystal lcd (12,11,5,4,3,2);\nvoid setup() {\nlcd.begin(16,2);\n}\nvoid loop() {\n\nfor (int i=0;i&lt;=60;i++)\n{\nlcd.print (i);\ndelay(1000);\nlcd.clear();\n}\n}\n</code></pre>"},{"location":"basic-arduino/#4-show-led-status-on-lcd-display-using-arduino","title":"4. Show LED Status on LCD Display using Arduino","text":"<p>Connect an LED to pin 13 of the Arduino and display \"LED is ON\" on the LCD when the LED is turned on, and \"LED is OFF\" when the LED is turned off with a 2-second delay between each blink.</p> <p>Implementation Video: </p> <p>Code:</p> <pre><code>#include&lt;LiquidCrystal.h&gt;\nLiquidCrystal lcd (12,11,5,4,3,2);\nvoid setup()\n{\nlcd.begin(16,2);\npinMode (6, OUTPUT);\npinMode (13, OUTPUT);\n}\nvoid loop()\n{\nanalogWrite (6,110);\ndigitalWrite(13, HIGH);\nlcd.setCursor (0,0);\nlcd.print (\"LED is ON\");\ndelay(1500);\nlcd.clear();\n\ndigitalWrite(13, LOW);\nlcd.setCursor (0,1);\nlcd.print (\"LED is OFF\");\ndelay(1500);\nlcd.clear();\n}\n</code></pre>"},{"location":"basic-arduino/#5-height-measurement-with-ultrasonic-sensor-and-arduino","title":"5. Height Measurement with Ultrasonic sensor and Arduino","text":"<p>Create a cap equipped with Ultrasonic sensors capable of accurately measuring a person's height in feet and inches, allowing for precise comparison between the measured height and the actual height.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>#include &lt;NewPing.h&gt;\n#include &lt;LiquidCrystal.h&gt;\n\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2); //Creates the LCD object parameter\n\n#define TRIGGER_PIN 9\n#define ECHO_PIN 10\n#define MAX_DISTANCE 300 //Maximum distance we want to measure(in centimeters)\n\nNewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); //NewPing setup of pins and maximum distance\n//defines all variables\nint distance;\nint distance_ft;\nint distance_in;\n\nvoid setup() {\n    lcd.begin(16, 2); //Intiatizes the interface to the LCD screen\n    pinMode(6, OUTPUT); //set pwm pin for backlight of the LCD\n\n    Serial.begin(115200);//starts the serial communication\n}\n\nvoid loop() {\n    // put your main code here, to run repeatedly:\n    analogWrite(6, 80);\n\n    ultrasonic();\n    lcd_print();\n    delay(1000);\n}\n\n//calculate the Height by using Ultrasonic sensor\nvoid ultrasonic() {\n    delay(50);//Wait 50ms between pings (about 20 pings/sec)\n\n    //finds the distance in feet and inches\n    distance = sonar.ping_in();\n    distance_ft = distance / 12;\n    distance_in = distance % 12;\n}\n\n//Print the Height in the LCD display\nvoid lcd_print() {\n    lcd.setCursor(0, 0); //sets the location at which subsequent text write\n\n    lcd.print(\"Height: \");\n    lcd.print(distance_ft);\n    lcd.print(\"ft \");\n    lcd.print(distance_in);\n    lcd.print(\"in\");\n}\n</code></pre>"},{"location":"basic-arduino/#6-water-level-indicator","title":"6. Water Level Indicator","text":"<p>Utilizing an ultrasonic sensor, design a water level detector with red LED activation for low water levels and green LED indication for full tank status,, while integrating an LCD to provide immediate feedback by displaying \"Tank is full\" or \"Medium Amount water,\" and \"Tank is Empty\" or \"Turn on Motor!\" messages, ensuring accurate monitoring and control of water levels.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>#include &lt;NewPing.h&gt;\n#include &lt;LiquidCrystal.h&gt;\n\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2); //Creates the LCD object parameter\n\n#define TRIGGER_PIN 9\n#define ECHO_PIN 10\n#define MAX_DISTANCE 300 //Maximum distance we want to measure (in centimeters)\n\nNewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); //NewPing setup of pins and maximum distance\n\nint distance;\n\nvoid setup() {\n    lcd.begin(16, 2); //Intiatizes the interface to the LCD screen\n    pinMode(6, OUTPUT); // set PWM pin for backlight of the LCD\n    pinMode(8, OUTPUT); // Set Arduino pin for LED\n    pinMode(13, OUTPUT);\n\n    Serial.begin(115200); // starts the serial communication\n}\n\nvoid loop() {\n    analogWrite(6, 90); // set PWM pin's voltage for backlight of the LCD\n\n    ultrasonic();\n    lcd_print();\n}\n\n// Find the water level by using Ultrasonic sensor\nvoid ultrasonic() {\n    delay(50); // Wait 50ms between pings (about 20 pings/sec)\n    distance = sonar.ping_cm(); // finds the water level in centimeter\n}\n\n// LED on and off control and Print the status of water level and Tank in the LCD display\nvoid lcd_print() {\n    // Make decision about the status of water level\n    if (distance &lt;= 2) {\n        lcd.clear();\n        lcd.setCursor(0, 0); // sets the location at which subsequent text write\n        lcd.print(\"Tank is Full\");\n        digitalWrite(13, HIGH); // Green LED on\n        digitalWrite(8, LOW);\n        delay(1000);\n    }\n    else if (distance &gt;= 4 &amp;&amp; distance &lt;= 7) {\n        lcd.clear();\n        lcd.setCursor(0, 0); // sets the location at which subsequent text write\n        lcd.print(\"Medium Amount\");\n        lcd.setCursor(0, 1);\n        lcd.print(\"Water\");\n        digitalWrite(8, LOW); // Red LED off\n        digitalWrite(13, LOW); // Green LED off\n        delay(1000);\n    }\n    else {\n        lcd.clear();\n        lcd.setCursor(0, 0);\n        lcd.print(\"Tank is Empty\");\n        lcd.setCursor(0, 1); // sets the location at which subsequent text write\n        lcd.print(\"Turn on Motor\");\n        digitalWrite(8, HIGH); // Red LED on\n        digitalWrite(13, LOW);\n        delay(1000);\n    }\n}\n</code></pre>"},{"location":"basic-arduino/#7-automatic-street-light-using-ldr-sensor","title":"7. Automatic street light using LDR sensor","text":"<p>Utilize a photoresistor(LDR) to accurately detect ambient light intensity, promptly initiating LED illumination upon exceeding a specific resistance threshold, and ensuring optimal control over lighting conditions by promptly deactivating the LED when the resistance surpasses the designated limit.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>//Include all necessary library\n#include &lt;Wire.h&gt;\n#include &lt;LiquidCrystal_I2C.h&gt;\n\nLiquidCrystal_I2C lcd(0x20, 16, 2); // set the LCD address to 0x20 for a 16 chars and 2 line display\n\nint resistance = 0; //declaring the variable that will store the value of photoresistor\n\nvoid setup() {\n    Serial.begin(9600); //baud rate for serial communication\n    pinMode(10, OUTPUT); // assigning mode to LED pin\n}\n\nvoid loop() {\n    resistance = analogRead(A0); //getting the value of photoresistor\n\n    //when the value of resistance is less than 50\n    if (resistance &lt; 50) {\n        Serial.println(\" HIGH intensity \");\n        digitalWrite(10, HIGH); //keep the LED ON\n    }\n    // otherwise turn the light OFF\n    else {\n        digitalWrite(10, LOW); // turn the LED OFF\n    }\n    delay(1000);\n}\n</code></pre>"},{"location":"basic-arduino/#8-measuring-velocity-of-sound-and-distance-mesurement-using-dht-11-and-ultrasonic-sensor","title":"8. Measuring Velocity of Sound and Distance mesurement using DHT-11 and Ultrasonic Sensor","text":"<p>Utilize a DHT11 or DHT22 sensor to measure temperature and humidity, then calculate the velocity of sound based on these parameters, subsequently determining the distance using an ultrasonic sensor, and display both the velocity of sound and distance on an LCD screen for monitoring purposes.</p> <p>Implementation Video: </p> <p>Code:</p> <pre><code>#include \"DHT.h\"\n#include&lt;Wire.h&gt;\n#include&lt;LiquidCrystal_I2C.h&gt;\n\nLiquidCrystal_I2C lcd(0x3F, 16, 2);\n\n#define DHTPIN 8\n#define DHTTYPE DHT11\nDHT dht(DHTPIN, DHTTYPE);\n\nint trig = 9;\nint echo = 10;\n\nlong duration;\nint distance;\nfloat T;\nfloat RH;\nfloat velocity;\n\nvoid setup() {\n    pinMode(trig, OUTPUT);//Sets trigPin as an output\n    pinMode(echo, INPUT);//sets echoPin as an input\n\n    dht.begin();\n\n    lcd.init(); //initialize the I2C_lcd display\n    lcd.backlight(); //use the backlight of lcd display\n\n    Serial.begin(9600);//starts the serial communication\n}\n\nvoid loop() {\n    dht_speed();\n    ultrasonic();\n    lcd_print();\n}\n\nvoid dht_speed() {\n    RH = dht.readHumidity();//Gets temperature value\n    T = dht.readTemperature();//Gets Humidity value\n\n    velocity = 331.4 + (0.6 * T) + (0.0124 * RH);//Calculate the speed of sound\n}\n\nvoid ultrasonic() {\n    //Clears the trigpin\n    digitalWrite(trig, LOW);\n    delayMicroseconds(2);\n\n    //Sets the trigPin on HIGH state for 10 microseconds\n    digitalWrite(trig, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(trig, LOW);\n\n    // Reads the echoPin, returns the sound wave travel time in microseconds\n    duration = pulseIn(echo, HIGH);\n\n    //calculating the distance using velocity and duration\n    distance = (velocity * 0.0001 * duration) / 2;\n    delay(100);\n}\n\nvoid lcd_print() {\n    //show velocity in m/s on LCD in first line\n    lcd.setCursor(0, 0); //sets the location at which subsequent text write\n    lcd.print(\"Velocity:\");\n    lcd.print(int(velocity));\n    lcd.setCursor(13, 0);\n    lcd.print(\"m/s\");\n\n    //show distance in cm on LCD in second line\n    lcd.setCursor(0, 1);\n    lcd.print(\"Distance: \");\n    lcd.print(distance);\n    lcd.setCursor(14, 1);\n    lcd.print(\"CM\");\n}\n</code></pre>"},{"location":"basic-arduino/#9-bpm-and-spo2-with-pulseoximeter-and-arduino","title":"9. BPM and SPO2 with PulseOximeter and Arduino","text":"<p>Create a pulse oximeter system integrated with an LCD display, featuring prompts such as \"Place your finger to Measure\" when no finger is detected,,,and displaying real-time BPM and SPO2 readings when a finger is placed.  Depending on the heart rate range, comments such as \"Average Heart Rate\" will be displayed in the second line of the LCD.</p> <p>Implementation Video: </p> <p>Code:</p> <pre><code>#include&lt;Wire.h&gt;  // Library for I2C communication\n#include&lt;LiquidCrystal_I2C.h&gt;  // Library for I2C LCD\n#include \"MAX30100_PulseOximeter.h\"  // Library for MAX30100 Pulse Oximeter sensor\n\nLiquidCrystal_I2C lcd(0x3F, 16, 2);  // LCD object with I2C address and dimensions\n\nPulseOximeter pox;  // Pulse Oximeter object\n\nuint32_t last_check = 0;  // Variable to store the last check time\nint Reporting_Time = 800;  // Time interval for reporting\nfloat BPM;  // Variable to store heart rate\nfloat SPO2;  // Variable to store blood oxygen level\n\nvoid setup() {\n    Serial.begin(9600);  // Initialize serial communication\n\n    lcd.init();  // Initialize the I2C LCD display\n    lcd.backlight();  // Turn on the backlight of the LCD display\n\n    pox.begin();  // Initialize the PulseOximeter sensor\n}\n\nvoid loop() {\n    PulseOximeter();  // Call the function to handle Pulse Oximeter readings\n}\n\nvoid PulseOximeter() {\n    pox.update();  // Update Pulse Oximeter readings\n\n    if (millis() - last_check &gt; Reporting_Time) {\n        BPM = pox.getHeartRate();  // Get the heart rate\n        SPO2 = pox.getSpO2();  // Get the blood oxygen level\n\n        if (BPM == 0 &amp;&amp; SPO2 == 0) {  // If no valid readings\n            lcd.clear();\n            lcd.setCursor(0, 0);\n            lcd.print(\"Place Finger\");  // Prompt to place finger\n        } else {  // Display heart rate and blood oxygen level\n            lcd.clear();\n            lcd.setCursor(0, 0);\n            lcd.print(\"BPM:\");\n            lcd.print(int(BPM));  // Display heart rate\n            lcd.setCursor(7, 0);\n            lcd.print(\" SPO2:\");\n            lcd.print(int(SPO2));  // Display blood oxygen level\n        }\n        lcd_print();  // Print the condition of heart rate\n        last_check = millis();  // Update last check time\n    }\n}\n\n// Check and print the condition of heart rate\nvoid lcd_print() {\n    // Conditions for heart rate classification\n    if (BPM &gt;= 61 &amp;&amp; BPM &lt;= 65) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Excellent Heart Rate\");\n    } else if (BPM &gt;= 66 &amp;&amp; BPM &lt;= 69) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Good Heart Rate\");\n    } else if (BPM &gt;= 70 &amp;&amp; BPM &lt;= 73) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Above Average\");\n    } else if (BPM &gt;= 74 &amp;&amp; BPM &lt;= 78) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Average Heart Rate\");\n    } else if (BPM &gt;= 79 &amp;&amp; BPM &lt;= 84) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Below Average\");\n    } else if (BPM &gt;= 85) {\n        lcd.setCursor(0, 1);\n        lcd.print(\"Poor Heart Rate\");\n    }\n}\n</code></pre>"},{"location":"basic-arduino/#10-proteus-simulation-for-automatic-street-light","title":"10. Proteus Simulation for Automatic Street Light","text":"<p>Simulation Video using Arduino:</p> <p>Simulation Video using Atmega328p Microcontroller:</p> <p>Code:</p> <pre><code>#include &lt;Wire.h&gt;  // Library for I2C communication\n#include &lt;LiquidCrystal_I2C.h&gt;  // Library for I2C LCD\n\nLiquidCrystal_I2C lcd(0x20, 16, 2); // set the LCD address to 0x20 for a 16 chars and 2 line display\n\nint resistance = 0; // declaring the variable that will store the value of photoresistor\n\nvoid setup() {\n    lcd.init(); // initialize the lcd\n    lcd.backlight();\n\n    pinMode(10, OUTPUT); // assigning mode to LED pin\n}\n\nvoid loop() {\n    resistance = analogRead(A0); // getting the value of photoresistor\n\n    lcd.clear();\n    // when the value of resistance is less than 341\n    if (resistance &gt; 1 &amp;&amp; resistance &lt;= 341) {\n        digitalWrite(10, LOW); // keep the LED OFF\n        lcd.print(\"Day Time\");\n        lcd.setCursor(0, 1);\n        lcd.print(\"Light Off\");\n    }\n    // otherwise turn the light OFF\n    else {\n        digitalWrite(10, HIGH); // turn the LED ON\n\n        lcd.print(\"Now Night\");\n        lcd.setCursor(0, 1);\n        lcd.print(\"Light On\");\n    }\n    delay(800);\n}\n</code></pre>"},{"location":"basic-arduino/#11-automatic-dino-game-with-servo-motor-and-arduino","title":"11. Automatic Dino Game with Servo motor and Arduino","text":"<p>Develop an automatic dino game system where a black cactus is detected by a light-dependent resistor (LDR). Prompt a servo motor to rotate between 30-50\u00b0 to simulate hitting the space bar on the keyboard,,followed by a reverse rotation to return to its initial position for seamless gameplay.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>#include &lt;Servo.h&gt;\n\nServo myservo; // create servo object to control a servo\n\nint pos = 0; // variable to store the servo position\nint ldr;\n\nvoid setup() {\n    myservo.attach(9); // attaches the servo on pin 9 to the servo object\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    ldr = analogRead(A0); // find the resistance value by LDR\n    delay(8);\n\n    if (ldr &lt; 20) {\n        // goes from 30 degrees to 50 degrees\n        myservo.write(30); // tell servo to go to position in variable 'pos'\n        delay(100); // waits 100ms for the servo to reach the position\n        myservo.write(50); // tell servo to go to position in variable 'pos'\n        delay(100);\n\n        // goes from 50 degrees to 30 degrees\n        myservo.write(30); // tell servo to go to position in variable 'pos'\n        delay(50); // waits 50ms for the servo to reach the position\n    }\n}\n</code></pre>"},{"location":"basic-arduino/#12-1-proteus-simulation-for-motor-speed-control","title":"12. 1-Proteus Simulation for Motor Speed Control","text":"<p>Operate the DC motor in forward motion for 5 seconds before reversing its direction for 3 seconds, while simultaneously incrementing the motor speed gradually from 0 to its maximum. Employ an LCD to continuously exhibit the percentage of speed for both motors.</p> <p>Simulation Video:</p> <p>Code:</p> <pre><code>#include &lt;Wire.h&gt;\n#include &lt;LiquidCrystal_I2C.h&gt;\n\nLiquidCrystal_I2C lcd(0x20, 16, 2); // set the LCD address to 0x20 for a 16 chars and 2 line display\n\n// Motor A connections\nint enA = 9;\nint in1 = 8;\nint in2 = 7;\n// Motor B connections\nint enB = 3;\nint in3 = 5;\nint in4 = 4;\n\nint pwm_A;\nint pwm_B;\nfloat speed_lcd;\n\nvoid setup() {\n    lcd.init(); // initialize the lcd\n    lcd.backlight();\n\n    pinMode(enA, OUTPUT);\n    pinMode(enB, OUTPUT);\n    pinMode(in1, OUTPUT);\n    pinMode(in2, OUTPUT);\n    pinMode(in3, OUTPUT);\n    pinMode(in4, OUTPUT);\n\n    // Turn off Motors- Initial state\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n    digitalWrite(in3, LOW);\n    digitalWrite(in4, LOW);\n}\n\nvoid loop() {\n    lcd_print();\n    directionControl();\n    delay(400);\n    speedControl();\n    delay(400);\n}\n\nvoid lcd_print() {\n    lcd.clear();\n    lcd.setCursor(0, 0);\n    lcd.print(\"Speed A: \");\n    lcd.setCursor(15, 0);\n    lcd.print(\"%\");\n    lcd.setCursor(0, 1);\n    lcd.print(\"Speed B: \");\n    lcd.setCursor(15, 1);\n    lcd.print(\"%\");\n}\n\n// This function lets you control spinning direction of motors\nvoid directionControl() {\n    // Set motors to different speed\n    pwm_A = 255;\n    pwm_B = 220;\n    analogWrite(enA, pwm_A);\n    analogWrite(enB, pwm_B);\n\n    lcd.setCursor(9, 0);\n    speed_percen(pwm_A);\n    lcd.setCursor(9, 1);\n    speed_percen(pwm_B);\n\n    // Turn on and rotate clockwise direction for 5 sec for motor A\n    digitalWrite(in1, HIGH);\n    digitalWrite(in2, LOW);\n\n    // Turn on Motor B\n    digitalWrite(in3, HIGH);\n    digitalWrite(in4, LOW);\n    delay(5000);\n\n    // Now change motor directions and rotate for 3 seconds\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, HIGH);\n\n    // Motor B\n    digitalWrite(in3, LOW);\n    digitalWrite(in4, HIGH);\n    delay(3000);\n\n    // Turn off motors\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n    digitalWrite(in3, LOW);\n    digitalWrite(in4, LOW);\n}\n\n// This function lets you find the percentage of speed\nvoid speed_percen(int value) {\n    // Calculate percentage of speed\n    speed_lcd = 0.3922 * value;\n    lcd.print(speed_lcd);\n}\n\n// This function lets you control speed of the motors\nvoid speedControl() {\n    // Turn on motors\n    // Motor A\n    digitalWrite(in1, HIGH);\n    digitalWrite(in2, LOW);\n\n    // Motor B\n    digitalWrite(in3, HIGH);\n    digitalWrite(in4, LOW);\n\n    // Accelerate from Zero to maximum speed\n    for (int i = 0; i &lt; 256; i++) {\n        analogWrite(enA, i);\n        analogWrite(enB, i);\n\n        lcd.setCursor(9, 0);\n        speed_percen(i);\n        lcd.setCursor(9, 1);\n        speed_percen(i);\n        delay(5);\n    }\n\n    // Decelerate from maximum speed to zero\n    for (int j = 255; j &gt;= 0; j--) {\n        analogWrite(enA, j);\n        analogWrite(enB, j);\n\n        lcd.setCursor(9, 0);\n        speed_percen(j);\n        lcd.setCursor(9, 1);\n        speed_percen(j);\n        delay(5);\n    }\n\n    // Turn off motors\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n    digitalWrite(in3, LOW);\n    digitalWrite(in4, LOW);\n}\n</code></pre>"},{"location":"basic-arduino/#12-2-motor-speed-control","title":"12. 2-Motor Speed Control","text":"<p>Implementation Video: </p> <p>Code:</p> <pre><code>// Include all necessary library\n#include &lt;Wire.h&gt;\n#include &lt;LiquidCrystal_I2C.h&gt;\n\n// Set the LCD address to 0x3F for a 16 chars and 2 line display\nLiquidCrystal_I2C lcd(0x3F, 16, 2);\n\n// Motor A connections\nint enA = 9;\nint in1 = 8;\nint in2 = 7;\n\nint pwm_A;\nfloat speed_lcd;\n\nvoid setup() {\n    lcd.init(); // Initialize the lcd\n    lcd.backlight();\n\n    pinMode(enA, OUTPUT);\n    pinMode(in1, OUTPUT);\n    pinMode(in2, OUTPUT);\n\n    // Turn off Motors- Initial state\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n}\n\nvoid loop() {\n    lcd_print();\n    directionControl();\n    delay(1000);\n    speedControl();\n    delay(1000);\n}\n\nvoid lcd_print() {\n    lcd.clear();\n    lcd.setCursor(0, 0);\n    lcd.print(\"Speed A: \");\n    lcd.setCursor(15, 0);\n    lcd.print(\"%\");\n}\n\n// This function lets you control spinning direction of motors\nvoid directionControl() {\n    // Set motors to different speed\n    pwm_A = 255;\n\n    analogWrite(enA, pwm_A);\n\n    lcd.setCursor(9, 0);\n    speed_percen(pwm_A);\n\n    // Turn on and rotate clockwise direction for 5 sec for motor A\n    digitalWrite(in1, HIGH);\n    digitalWrite(in2, LOW);\n    delay(5000);\n\n    // Now change motor directions and rotate for 3 seconds\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, HIGH);\n    delay(3000);\n\n    // Turn off motors\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n}\n\n// This function lets you find the percentage of speed\nvoid speed_percen(int value) {\n    // Calculate percentage of speed\n    speed_lcd = 0.3922 * value;\n    lcd.print(speed_lcd);\n}\n\n// This function lets you control speed of the motors\nvoid speedControl() {\n    // Turn on motors\n    // Motor A\n    digitalWrite(in1, HIGH);\n    digitalWrite(in2, LOW);\n\n    // Accelerate from Zero to maximum speed\n    for (int i = 0; i &lt; 256; i++) {\n        analogWrite(enA, i);\n        lcd.setCursor(9, 0);\n        speed_percen(i);\n        delay(90);\n    }\n\n    // Decelerate from maximum speed to zero\n    for (int j = 255; j &gt;= 0; j--) {\n        analogWrite(enA, j);\n        lcd.setCursor(9, 0);\n        speed_percen(j);\n        delay(50);\n    }\n\n    // Turn off motors\n    digitalWrite(in1, LOW);\n    digitalWrite(in2, LOW);\n}\n</code></pre>"},{"location":"basic-arduino/#13-three-led-control-with-esp8266-and-blynk-iot-server","title":"13. Three LED control with ESP8266 and  'Blynk IoT' server.","text":"<p>Utilize an ESP8266 or ESP32 microcontroller to manage the blinking of three LEDs via the Blynk IoT server,, while updating an LCD display to reflect the real-time status of each LED, showing \"LED 1 ON\" when the first LED is activated and accurately reflecting the state changes of the remaining LEDs.</p> <p>Implementation Video:</p> <p>Code:</p> <pre><code>// Include all necessary library\n// for i2c_LCD\n#include &lt;Wire.h&gt;\n#include &lt;LiquidCrystal_I2C.h&gt;\n\n// Set the LCD address to 0x3F for a 16 chars and 2 line display\nLiquidCrystal_I2C lcd(0x3F, 16, 2);\n\n#define BLYNK_TEMPLATE_ID \"TMPL6bhWfwb6k\"\n#define BLYNK_TEMPLATE_NAME \"three led control\"\n#define BLYNK_AUTH_TOKEN \"c-_xoSIoZjRLyKxPhXBruH_iZtQbfl5m\"\n\n// Blynk Things\n#include &lt;ESP8266WiFi.h&gt; // ESPWiFi\n#include &lt;BlynkSimpleEsp8266.h&gt; // for Blynk\n\nchar ssid[] = \"Nusrat\";\nchar pass[] = \"abc123789\";\n\n// All variables\nint pinValue_1;\nint pinValue_2;\nint pinValue_3;\n\n// Writing to pin D0 from V0\nBLYNK_WRITE(V0) {\n    pinValue_1 = param.asInt(); // Assigning incoming value from pin V0 to a variable\n    digitalWrite(D0, pinValue_1);\n    // Process received value\n}\n\n// Writing to pin D5 from V1\nBLYNK_WRITE(V1) {\n    pinValue_2 = param.asInt(); // Assigning incoming value from pin V1 to a variable\n    digitalWrite(D5, pinValue_2);\n    // Process received value\n}\n\n// Writing to pin D6 from V2\nBLYNK_WRITE(V2) {\n    pinValue_3 = param.asInt(); // Assigning incoming value from pin V2 to a variable\n    digitalWrite(D6, pinValue_3);\n    // Process received value\n}\n\nvoid setup() {\n    lcd.init(); // Initialize the lcd\n    lcd.backlight();\n\n    Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);\n    pinMode(D0, OUTPUT);\n    pinMode(D5, OUTPUT);\n    pinMode(D6, OUTPUT);\n\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    lcd.clear();\n    LED_state();\n    delay(500);\n    Blynk.run();\n}\n\n// Print the LED state on I2C LCD display\nvoid LED_state() {\n    // Red LED state on LCD display\n    if (pinValue_1 == 1) {\n        lcd.setCursor(0, 0);\n        lcd.print(\"LED 1 ON\");\n    } else if (pinValue_1 == 0) {\n        lcd.setCursor(0, 0);\n        lcd.print(\"LED 1 OFF\");\n    }\n\n    // Green LED state on LCD display\n    if (pinValue_2 == 1) {\n        lcd.setCursor(11, 0);\n        lcd.print(\"LED 2\");\n        lcd.setCursor(0, 1);\n        lcd.print(\"ON\");\n    } else if (pinValue_2 == 0) {\n        lcd.setCursor(11, 0);\n        lcd.print(\"LED 2\");\n        lcd.setCursor(0, 1);\n        lcd.print(\"OFF\");\n    }\n\n    // Yellow LED state on LCD display\n    if (pinValue_3 == 1) {\n        lcd.setCursor(5, 1);\n        lcd.print(\"LED 3 ON\");\n    } else if (pinValue_3 == 0) {\n        lcd.setCursor(5, 1);\n        lcd.print(\"LED 3 OFF\");\n    }\n}\n</code></pre>"},{"location":"circuit-simulation/","title":"Electrical Circuit Simulation","text":""},{"location":"circuit-simulation/#proteus","title":"\ud83d\udccc Proteus","text":"Proteus <p>I have designed and implemented a diverse range of circuits, starting from fundamental logic gates to complex systems. These circuits integrate sensors, power supplies, and Arduino-based microcontroller applications.</p> <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p>"},{"location":"circuit-simulation/#ads","title":"\ud83d\udccc ADS","text":"Advanced Design System(ADS) <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p>"},{"location":"circuit-simulation/#psim","title":"\ud83d\udccc PSIM","text":"PSIM <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p>"},{"location":"course-and-certification/","title":"Course and Certification","text":""},{"location":"course-and-certification/#course-on-engineering-maths-and-their-physics-applications","title":"Course on 'Engineering Maths and Their Physics &amp; Applications'","text":"<p>Part 01</p> <p>I completted the Engineering Maths and Their Physics &amp; Applications course  was taught by Dr. Mahdy Rahman Chowdhury.</p> <p>I achieved this Recommentdation Letter after properly sumbitting assignment of the 1st half part (1st 6 classes among 12 classes) of the full course: Fourier Series &amp; its transform,Laplace Transform (Physics and real-world applications), Vector calculus (Physics and real-world applications). Each of the classes was minimum 3.5 to 4 hours long.</p>"},{"location":"course-and-certification/#recommendation-letter-for-part-01","title":"\ud83d\udd17Recommendation Letter for Part-01","text":"<p>\ud83d\udd17My submitted Assignment </p>"},{"location":"course-and-certification/#part-02","title":"Part 02","text":"<p>I also completted the Engineering Maths and Their Physics &amp; Applications course  was taught by Dr. Mahdy Rahman Chowdhury.</p> <p>I achieved this Recommentdation Letter after properly sumbitting my well-written assignment that has covered the theory part of the 2nd half (last 6 classes among 12 classes) of the course: Linear Algebra, and Matrix (Physics and real-world applications), ODE and PDE (Physics and real-world applications), part. Each of the classes was minimum 3.5 to 4 hours long.</p>"},{"location":"course-and-certification/#recommendation-letter-for-part-02","title":"\ud83d\udd17Recommendation Letter for Part-02","text":"<p>\ud83d\udd17My submitted Assignment </p>"},{"location":"course-and-certification/#matlab-workshop","title":"Matlab Workshop","text":"<p>I participated in a 2 Days Matlab Wrokshop origanized by IEEE CUET STUDENT BRANCH.</p> Certificate"},{"location":"iot-based-health-monitoring/","title":"IOT based Health Monitoring System","text":""},{"location":"iot-based-health-monitoring/#iot-based-low-cost-patient-health-monitoring-device","title":"IoT Based - Low Cost Patient Health Monitoring Device","text":"<p>\ud83c\udfc6\ud83c\udfc6\ud83c\udfc6 CHAMPION Project at Internaltional Student LED-Con 2023, 'IEEE Bangladesh Section located Conference 2023' \ud83c\udfc6\ud83c\udfc6\ud83c\udfc6</p> OxyGenix Device <p>Effective patient monitoring is crucial for healthcare, particularly in areas with limited access to medical professionals.</p> <p>Our device transmits real-time heart rate, SpO2, and temperature readings to doctors, relatives, and authorized personnel via an IoT dashboard. Additionally, it triggers automatic emergency alerts with location data through phone calls, SMS, and emails, while simultaneously sounding a local buzzer for immediate actions.</p> <p>Our low-cost, IoT-based health monitoring device addresses key challenges like infrequent monitoring and delayed response. It offers remote access for doctors, automatic emergency alerts (calls, texts, emails) with location data, and reduces healthcare costs by enabling home-based care. This improves overall patient outcomes and accessibility, especially in regions with limited medical resources.</p>"},{"location":"iot-based-health-monitoring/#medical-feature","title":"\ud83d\udccc Medical Feature","text":"<p>\ud83e\udec0 BPM Measurement</p> <p>\ud83e\ude78 SpO2 Measurement</p> <p>\ud83c\udf21\ufe0f Temperature Measurement</p> <p>\ud83d\udcc8 Patient History</p> <p>\u2705 No Side Effect</p>"},{"location":"iot-based-health-monitoring/#integration-and-testing-on-admitted-patient-of-cmch","title":"\ud83e\udde9 Integration and Testing on Admitted Patient of CMCH","text":"<p>We have gone to Chittagong Medical College Hostipal to integrate our device with real patients in multiple stages including critical, normal and mild conditions to check our device performence.</p> <p>We got a fine result with accuracy of measurement more than 90%.The Doctor satisfied with the result.</p>"},{"location":"iot-based-health-monitoring/#credit","title":"\u2b50 Credit","text":"<p>Engineered by Team OxyGenix</p> <ol> <li> <p>Ajmal Ahmed Shakib</p> </li> <li> <p>Nusrat Jahan Papri</p> </li> <li> <p>Md.Shakibur Rahman</p> </li> </ol>"},{"location":"myskills/","title":"Myskills","text":""},{"location":"myskills/#softwares-and-programming-skills","title":"Softwares and Programming Skills","text":"<p>Programming Language</p> <p>Microcontroller Programming</p> <p>Numerical Analysis </p> <p>Electrical Circuit Simulation</p> <p>Graphics and Videos</p>"},{"location":"numerical-matlab/","title":"Data Analysis Tools","text":""},{"location":"numerical-matlab/#matlab","title":"\ud83d\udccc Matlab","text":"MATLAB <p>I have built a strong MATLAB foundation through numerical analysis methods, data visualization, and  signal processing techniques such as image and audio processing using filters. I am eager to apply these skills in real-world projects, particularly those centered on digital signal processing.</p> <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p>"},{"location":"numerical-matlab/#origin","title":"\ud83d\udccc Origin","text":"<p>I used Origin, a graphing and analysis software, to produce a range of plots for my sessional courses. I generated visualizations like scatter plots and 3D surface plots to understand trends and relationships within my data.</p> <p>\ud83d\udd17CLICk Here for MY GitHub Repositories</p>"},{"location":"training-working/","title":"Training working","text":"<p>Industrial attachment</p>"},{"location":"transformer-design/","title":"Transformer Design","text":""},{"location":"transformer-design/#distribution-transformer-design","title":"Distribution Transformer Design","text":"<p>I designed a 120 kVA, three-phase, 50 Hz, 11000/415 V, delta/star distribution transformer.</p>"},{"location":"transformer-design/#conditions","title":"Conditions:","text":"<p>\u2022 Tapping \u00b1 2.5%, \u00b1 5% on high voltage side. </p> <p>\u2022 Cooling ON (self-oil cooled) </p> <p>\u2022 Temperature rise over oil less than 600C </p> <p>\u2022 Load loss not more than 3KW </p> <p>\u2022 Percentage impedance %Z= 4.50%</p>"},{"location":"transformer-design/#design-parameters","title":"Design Parameters:","text":"<ol> <li> <p>Efficiency at 750C on full load,75% load, and 50% load at unity power factor </p> </li> <li> <p>Regulation on full load at 750C at unity power factor and 0.8 power factor lagging</p> </li> </ol> Autocad Design"},{"location":"transformer-design/#layout-of-lv-winding-all-dimensions-in-mm","title":"Layout of L.V. winding (all dimensions in mm)","text":"Layout of L.V. Winding"},{"location":"transformer-design/#layout-of-hv-winding","title":"Layout of H.V. winding","text":"Layout of each H.V. coils (all dimensions in mm) Layout of H.V. winding (in mm)"},{"location":"transformer-design/#layout-of-three-phase-distribution-transformer","title":"Layout of Three phase Distribution Transformer","text":"Layout of Three phase Distribution Transformer (all dimensions in mm)"},{"location":"transformer-design/#tank-dimensions","title":"\u2699\ufe0fTank dimensions","text":"Tank dimensions(in mm)"},{"location":"transformer-design/#details-report-is-here","title":"\ud83d\udd17Details Report is here","text":""},{"location":"ultrasonic-distance-measurement/","title":"Ultrasonic Distance Measurement","text":"<p>Our project is a low-cost, user-friendly ultrasonic distance meter. It uses sound waves to detect and calculate the distance of nearby objects, making it a handy tool for non-contact measurement.</p> <p>The sensor transmits and receives ultrasonic pulses, and a microcontroller converts the analog signal into a digital format for accurate distance calculation. This information is then displayed on an LCD screen for easy viewing. </p> <p>This simple and affordable system offers a reliable way to measure distance without touching the target object.</p>"},{"location":"ultrasonic-distance-measurement/#feature","title":"\ud83d\udccc Feature","text":"<p>\ud83d\udd39 Non-contact measurement</p> <p>\ud83d\udd39 Real-time Display</p> <p>\ud83d\udd39 Effective Range: 5 cm to 4 meters.</p> <p>Field of Application</p> <p>\ud83d\udd39 Water Level Measurement</p> <p>\ud83d\udd39 Obstacle avoidance robots</p> <p>\ud83d\udd39 Accident avoidance cars</p>"},{"location":"ultrasonic-distance-measurement/#circuit-diagram","title":"\ud83d\udd30 Circuit Diagram","text":"Circuit Diagram"},{"location":"ultrasonic-distance-measurement/#hardware","title":"\ud83d\udd30 Hardware","text":"Breadboard Implementation"},{"location":"ultrasonic-distance-measurement/#pcb-design","title":"\ud83d\udd30 PCB Design","text":"PCB Layout"},{"location":"ultrasonic-distance-measurement/#pcb-implementaion","title":"\ud83d\udd30 PCB Implementaion","text":"PCB Implementation"},{"location":"ultrasonic-distance-measurement/#code","title":"\ud83d\udd30 Code","text":"<p>We used 'mikroC PRO' cooding for the distance measurement using PIC 16F877A  Microcontroller and HC-SR04 Sensor.</p> <p>We upload this code to PIC 16F877A Microcontroller via 'PICkit 2'.</p> <p>\ud83d\udd17Code is here</p>"},{"location":"ultrasonic-distance-measurement/#report","title":"\ud83d\udd30 Report","text":"<p>The report has been made publicly available to to help other students provide a guideline on the basic framework.Please avoid copying entriely or partially from this document. </p> <p>\ud83d\udd17Click here for the Report</p>"},{"location":"ultrasonic-distance-measurement/#credit","title":"\u2b50 Credit","text":"<p>As a part of the academic activities, this project has been developed by:</p> <ol> <li> <p>Nusrat Jahan Papri</p> </li> <li> <p>Jannatul Maua Nazia</p> </li> <li> <p>Ramisha Anan</p> </li> <li> <p>Susmita Barua</p> </li> </ol>"}]}